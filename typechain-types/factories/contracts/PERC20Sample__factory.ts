/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PERC20Sample,
  PERC20SampleInterface,
} from "../../contracts/PERC20Sample";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020017f53616d706c6520504552433230000000000000000000000000000000000000008152506040518060400160405280600581526020017f705357545200000000000000000000000000000000000000000000000000000081525081600390816200008f919062000324565b508060049081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b611621806200041b6000396000f3fe6080604052600436106100a05760003560e01c8063395093511161006457806339509351146101b857806370a08231146101f557806395d89b4114610232578063a457c2d71461025d578063a9059cbb1461029a578063dd62ed3e146102d7576100b8565b806306fdde03146100bd578063095ea7b3146100e857806318160ddd1461012557806323b872dd14610150578063313ce5671461018d576100b8565b366100b8576100b66100b0610314565b3461031c565b005b600080fd5b3480156100c957600080fd5b506100d2610415565b6040516100df9190610dda565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190610e95565b6104a7565b60405161011c9190610ef0565b60405180910390f35b34801561013157600080fd5b5061013a6104c5565b6040516101479190610f1a565b60405180910390f35b34801561015c57600080fd5b5061017760048036038101906101729190610f35565b6104cf565b6040516101849190610ef0565b60405180910390f35b34801561019957600080fd5b506101a26105c7565b6040516101af9190610fa4565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da9190610e95565b6105d0565b6040516101ec9190610ef0565b60405180910390f35b34801561020157600080fd5b5061021c60048036038101906102179190610fbf565b61067c565b6040516102299190610f1a565b60405180910390f35b34801561023e57600080fd5b50610247610732565b6040516102549190610dda565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190610e95565b6107c4565b6040516102919190610ef0565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc9190610e95565b6108af565b6040516102ce9190610ef0565b60405180910390f35b3480156102e357600080fd5b506102fe60048036038101906102f99190610fec565b6108cd565b60405161030b9190610f1a565b60405180910390f35b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038290611078565b60405180910390fd5b610397600083836109c2565b80600260008282546103a991906110c7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103fe91906110c7565b92505081905550610411600083836109c7565b5050565b6060600380546104249061112a565b80601f01602080910402602001604051908101604052809291908181526020018280546104509061112a565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104bb6104b4610314565b84846109cc565b6001905092915050565b6000600254905090565b60006104dc848484610b30565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610527610314565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e906111cd565b60405180910390fd5b6105bb856105b3610314565b8584036109cc565b60019150509392505050565b60006012905090565b60006106726105dd610314565b8484600160006105eb610314565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461066d91906110c7565b6109cc565b6001905092915050565b60008173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e39061125f565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546107419061112a565b80601f016020809104026020016040519081016040528092919081815260200182805461076d9061112a565b80156107ba5780601f1061078f576101008083540402835291602001916107ba565b820191906000526020600020905b81548152906001019060200180831161079d57829003601f168201915b5050505050905090565b600080600160006107d3610314565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610890576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610887906112f1565b60405180910390fd5b6108a461089b610314565b858584036109cc565b600191505092915050565b60006108c36108bc610314565b8484610b30565b6001905092915050565b60008173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109349061125f565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3290611383565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa190611415565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b96906114a7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590611539565b60405180910390fd5b610c198383836109c2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c96906115cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d3291906110c7565b92505081905550610d448484846109c7565b50505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d84578082015181840152602081019050610d69565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dac82610d4a565b610db68185610d55565b9350610dc6818560208601610d66565b610dcf81610d90565b840191505092915050565b60006020820190508181036000830152610df48184610da1565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2c82610e01565b9050919050565b610e3c81610e21565b8114610e4757600080fd5b50565b600081359050610e5981610e33565b92915050565b6000819050919050565b610e7281610e5f565b8114610e7d57600080fd5b50565b600081359050610e8f81610e69565b92915050565b60008060408385031215610eac57610eab610dfc565b5b6000610eba85828601610e4a565b9250506020610ecb85828601610e80565b9150509250929050565b60008115159050919050565b610eea81610ed5565b82525050565b6000602082019050610f056000830184610ee1565b92915050565b610f1481610e5f565b82525050565b6000602082019050610f2f6000830184610f0b565b92915050565b600080600060608486031215610f4e57610f4d610dfc565b5b6000610f5c86828701610e4a565b9350506020610f6d86828701610e4a565b9250506040610f7e86828701610e80565b9150509250925092565b600060ff82169050919050565b610f9e81610f88565b82525050565b6000602082019050610fb96000830184610f95565b92915050565b600060208284031215610fd557610fd4610dfc565b5b6000610fe384828501610e4a565b91505092915050565b6000806040838503121561100357611002610dfc565b5b600061101185828601610e4a565b925050602061102285828601610e4a565b9150509250929050565b7f5045524332303a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000611062602083610d55565b915061106d8261102c565b602082019050919050565b6000602082019050818103600083015261109181611055565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110d282610e5f565b91506110dd83610e5f565b92508282019050808211156110f5576110f4611098565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061114257607f821691505b602082108103611155576111546110fb565b5b50919050565b7f5045524332303a207472616e7366657220616d6f756e7420657863656564732060008201527f616c6c6f77616e63650000000000000000000000000000000000000000000000602082015250565b60006111b7602983610d55565b91506111c28261115b565b604082019050919050565b600060208201905081810360008301526111e6816111aa565b9050919050565b7f50455243323053616d706c653a206d73672e73656e64657220213d206163636f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b6000611249602383610d55565b9150611254826111ed565b604082019050919050565b600060208201905081810360008301526112788161123c565b9050919050565b7f5045524332303a2064656372656173656420616c6c6f77616e63652062656c6f60008201527f77207a65726f0000000000000000000000000000000000000000000000000000602082015250565b60006112db602683610d55565b91506112e68261127f565b604082019050919050565b6000602082019050818103600083015261130a816112ce565b9050919050565b7f5045524332303a20617070726f76652066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061136d602583610d55565b915061137882611311565b604082019050919050565b6000602082019050818103600083015261139c81611360565b9050919050565b7f5045524332303a20617070726f766520746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006113ff602383610d55565b915061140a826113a3565b604082019050919050565b6000602082019050818103600083015261142e816113f2565b9050919050565b7f5045524332303a207472616e736665722066726f6d20746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611491602683610d55565b915061149c82611435565b604082019050919050565b600060208201905081810360008301526114c081611484565b9050919050565b7f5045524332303a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611523602483610d55565b915061152e826114c7565b604082019050919050565b6000602082019050818103600083015261155281611516565b9050919050565b7f5045524332303a207472616e7366657220616d6f756e7420657863656564732060008201527f62616c616e636500000000000000000000000000000000000000000000000000602082015250565b60006115b5602783610d55565b91506115c082611559565b604082019050919050565b600060208201905081810360008301526115e4816115a8565b905091905056fea26469706673582212202aeed48b424843f48074e8439037e669938ac39135867412cd93fe9f5dcb592164736f6c63430008140033";

type PERC20SampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PERC20SampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PERC20Sample__factory extends ContractFactory {
  constructor(...args: PERC20SampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PERC20Sample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PERC20Sample__factory {
    return super.connect(runner) as PERC20Sample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PERC20SampleInterface {
    return new Interface(_abi) as PERC20SampleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PERC20Sample {
    return new Contract(address, _abi, runner) as unknown as PERC20Sample;
  }
}
