/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Swisstronik2,
  Swisstronik2Interface,
} from "../../../contracts/Hello_swtr2.sol/Swisstronik2";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMessage2",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526106e2806100136000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806314bafeab14610046578063368b877214610064578063ce6d41de14610080575b600080fd5b61004e61009e565b60405161005b9190610210565b60405180910390f35b61007e6004803603810190610079919061037b565b6100db565b005b6100886100ee565b6040516100959190610210565b60405180910390f35b60606040518060400160405280600281526020017f6869000000000000000000000000000000000000000000000000000000000000815250905090565b80600090816100ea91906105da565b5050565b6060600080546100fd906103f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610129906103f3565b80156101765780601f1061014b57610100808354040283529160200191610176565b820191906000526020600020905b81548152906001019060200180831161015957829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b838110156101ba57808201518184015260208101905061019f565b60008484015250505050565b6000601f19601f8301169050919050565b60006101e282610180565b6101ec818561018b565b93506101fc81856020860161019c565b610205816101c6565b840191505092915050565b6000602082019050818103600083015261022a81846101d7565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610288826101c6565b810181811067ffffffffffffffff821117156102a7576102a6610250565b5b80604052505050565b60006102ba610232565b90506102c6828261027f565b919050565b600067ffffffffffffffff8211156102e6576102e5610250565b5b6102ef826101c6565b9050602081019050919050565b82818337600083830152505050565b600061031e610319846102cb565b6102b0565b90508281526020810184848401111561033a5761033961024b565b5b6103458482856102fc565b509392505050565b600082601f83011261036257610361610246565b5b813561037284826020860161030b565b91505092915050565b6000602082840312156103915761039061023c565b5b600082013567ffffffffffffffff8111156103af576103ae610241565b5b6103bb8482850161034d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061040b57607f821691505b60208210810361041e5761041d6103c4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610449565b6104908683610449565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006104d76104d26104cd846104a8565b6104b2565b6104a8565b9050919050565b6000819050919050565b6104f1836104bc565b6105056104fd826104de565b848454610456565b825550505050565b600090565b61051a61050d565b6105258184846104e8565b505050565b5b818110156105495761053e600082610512565b60018101905061052b565b5050565b601f82111561058e5761055f81610424565b61056884610439565b81016020851015610577578190505b61058b61058385610439565b83018261052a565b50505b505050565b600082821c905092915050565b60006105b160001984600802610593565b1980831691505092915050565b60006105ca83836105a0565b9150826002028217905092915050565b6105e382610180565b67ffffffffffffffff8111156105fc576105fb610250565b5b61060682546103f3565b61061182828561054d565b600060209050601f8311600181146106445760008415610632578287015190505b61063c85826105be565b8655506106a4565b601f19841661065286610424565b60005b8281101561067a57848901518255600182019150602085019450602081019050610655565b868310156106975784890151610693601f8916826105a0565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220d03a86c558e0b95c36845756c83569170a45c61ad0eb00220a73eb3ef269ea2a64736f6c63430008140033";

type Swisstronik2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Swisstronik2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swisstronik2__factory extends ContractFactory {
  constructor(...args: Swisstronik2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Swisstronik2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Swisstronik2__factory {
    return super.connect(runner) as Swisstronik2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Swisstronik2Interface {
    return new Interface(_abi) as Swisstronik2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Swisstronik2 {
    return new Contract(address, _abi, runner) as unknown as Swisstronik2;
  }
}
